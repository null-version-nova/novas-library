plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.8.21'
}

architectury {
    common(rootProject.enabled_platforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/novas_library.accesswidener")
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury:${rootProject.architectury_version}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + minecraft_version
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
repositories {
    mavenCentral()
}

kotlin {
    jvmToolchain(17)
}

apply plugin: "com.igormaznitsa.jcp"

preprocess {
    sources = [file('src/main')]
    allowWhitespaces = false
    keepComments = 'remove_jcp_only'
    fileExtensions = ['java','kt']
    keepLines = false
    verbose = true
    vars = ['MC': rootProject.mcVersion]
    target = file('src/processed')
    print(outcomingFiles.getAsFileTree())
    outputs.upToDateWhen { false }
}

tasks.register("changeSourceFolder") {
    sourceSets {
        main {
            kotlin {
                srcDirs = ['src/processed/kotlin']
            }
        }
    }
    outputs.upToDateWhen { false }
}.get().dependsOn(preprocess)

compileKotlin.dependsOn(changeSourceFolder)
compileJava.dependsOn(changeSourceFolder)